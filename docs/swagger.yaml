definitions:
  models.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      lyrics:
        type: string
      releaseDate:
        type: string
      song:
        type: string
    type: object
info:
  contact: {}
paths:
  /example:
    get:
      description: Responds with a simple message
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Example endpoint
      tags:
      - example
  /songs:
    get:
      description: Возвращает список песен с фильтрацией по названию группы и песни,
        а также поддерживает пагинацию
      parameters:
      - description: Название группы
        in: query
        name: group
        type: string
      - description: Название песни
        in: query
        name: song
        type: string
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Количество элементов на странице
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение песен с фильтрацией и пагинацией
      tags:
      - Songs
    post:
      consumes:
      - application/json
      description: Добавляет новую песню в библиотеку, запрашивая данные из внешнего
        API
      parameters:
      - description: Данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Добавление новой песни
      tags:
      - Songs
  /songs/{id}:
    delete:
      description: Удаляет песню из библиотеки
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удаление песни
      tags:
      - Songs
    put:
      consumes:
      - application/json
      description: Обновляет информацию о песне
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Новые данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Изменение данных песни
      tags:
      - Songs
  /songs/{id}/lyrics:
    get:
      description: Возвращает текст песни, разделённый на куплеты, с поддержкой пагинации
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 2
        description: Количество строк на странице
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение текста песни с пагинацией
      tags:
      - Songs
swagger: "2.0"
